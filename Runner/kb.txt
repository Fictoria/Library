// basics
human: object.
thing: object.
resource: thing.
material: thing.
building: thing.
fire: thing.

instance(self, human).

// some types
tree: resource.
quarry: resource.
wood: material.
stone: material.
campfire: building.
storage: building.


// input/output
provides(r: +resource, m: +material).
consumes(b: +building, m: +material).
contains(b: +building, m: +material).

provides(tree, wood).
provides(quarry, stone).
consumes(campfire, wood).
consumes(storage, wood).
consumes(storage, stone).

// etc.
searchable(t: thing).
location(t: -thing, x: int, y: int).
carrying(t: -thing).
warm(h: human).

// the world
searchable(tree).
searchable(quarry).
searchable(campfire).
searchable(storage).

instance(tree1, tree).
instance(cf1, campfire).

location(tree1, 5, 2).
location(cf1, 2, 3).

search(t: thing) -> {
    space: &searchable(@all); all.
    cost: 1000.
    conditions:
        !location(t, _, _).
    locals:
        name = str(t) + "_" + id().
    effects:
        instance(name, t).
        location(name, 0, 0).
}.